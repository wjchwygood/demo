{"version":3,"file":"ngx-infinite-scroll.es5.js","sources":["../../ngx-infinite-scroll.ts","../../public_api.ts","../../src/modules/ngx-infinite-scroll.module.ts","../../src/modules/infinite-scroll.directive.ts","../../src/services/scroll-register.ts","../../src/services/scroll-resolver.ts","../../src/services/position-resolver.ts","../../src/services/event-trigger.ts","../../src/services/axis-resolver.ts","../../src/services/ngx-ins-utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ContainerRef,InfiniteScrollEvent,IPositionElements,IPositionStats,IScrollStats,IScrollerConfig,IResolver,InfiniteScrollDirective,InfiniteScrollModule} from './public_api';\n","/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n\n/**\n * Entry point for all public APIs of the package.\n */\nexport {ContainerRef,InfiniteScrollEvent,IPositionElements,IPositionStats,IScrollStats,IScrollerConfig,IResolver,InfiniteScrollDirective,InfiniteScrollModule} from './src/ngx-infinite-scroll';\n\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\nexport class InfiniteScrollModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n  imports: [],\n  providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InfiniteScrollModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { InfiniteScrollEvent } from '../models';\nimport { hasWindowDefined, inputPropChanged } from '../services/ngx-ins-utils';\nimport { createScroller } from '../services/scroll-register';\nexport class InfiniteScrollDirective\n  implements OnDestroy, OnChanges, AfterViewInit {\n   scrolled = new EventEmitter<InfiniteScrollEvent>();\n   scrolledUp = new EventEmitter<InfiniteScrollEvent>();\n\n   infiniteScrollDistance: number = 2;\n   infiniteScrollUpDistance: number = 1.5;\n   infiniteScrollThrottle: number = 300;\n   infiniteScrollDisabled: boolean = false;\n   infiniteScrollContainer: any = null;\n   scrollWindow: boolean = true;\n   immediateCheck: boolean = false;\n   horizontal: boolean = false;\n   alwaysCallback: boolean = false;\n   fromRoot: boolean = false;\nprivate disposeScroller: Subscription;\n/**\n * @param {?} element\n * @param {?} zone\n */\nconstructor(private element: ElementRef,\nprivate zone: NgZone) { }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    if (!this.infiniteScrollDisabled) {\n      this.setup();\n    }\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }: SimpleChanges) {\n    const /** @type {?} */ containerChanged = inputPropChanged(infiniteScrollContainer);\n    const /** @type {?} */ disabledChanged = inputPropChanged(infiniteScrollDisabled);\n    const /** @type {?} */ distanceChanged = inputPropChanged(infiniteScrollDistance);\n    const /** @type {?} */ shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n      (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n\n    if (containerChanged || disabledChanged || distanceChanged) {\n      this.destroyScroller();\n      if (shouldSetup) {\n        this.setup();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nsetup() {\n    if (hasWindowDefined()) {\n      this.zone.runOutsideAngular(() => {\n        this.disposeScroller = createScroller({\n          fromRoot: this.fromRoot,\n          alwaysCallback: this.alwaysCallback,\n          disable: this.infiniteScrollDisabled,\n          downDistance: this.infiniteScrollDistance,\n          element: this.element,\n          events: {\n            // tslint:disable-next-line:arrow-parens\n            down: event => this.zone.run(() => this.scrolled.emit(event)),\n            // tslint:disable-next-line:arrow-parens\n            up: event => this.zone.run(() => this.scrolledUp.emit(event))\n          },\n          horizontal: this.horizontal,\n          scrollContainer: this.infiniteScrollContainer,\n          scrollWindow: this.scrollWindow,\n          throttle: this.infiniteScrollThrottle,\n          upDistance: this.infiniteScrollUpDistance\n        });\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.destroyScroller();\n  }\n/**\n * @return {?}\n */\ndestroyScroller() {\n    if (this.disposeScroller) {\n      this.disposeScroller.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'scrolled': [{ type: Output },],\n'scrolledUp': [{ type: Output },],\n'infiniteScrollDistance': [{ type: Input },],\n'infiniteScrollUpDistance': [{ type: Input },],\n'infiniteScrollThrottle': [{ type: Input },],\n'infiniteScrollDisabled': [{ type: Input },],\n'infiniteScrollContainer': [{ type: Input },],\n'scrollWindow': [{ type: Input },],\n'immediateCheck': [{ type: Input },],\n'horizontal': [{ type: Input },],\n'alwaysCallback': [{ type: Input },],\n'fromRoot': [{ type: Input },],\n};\n}\n\nfunction InfiniteScrollDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInfiniteScrollDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInfiniteScrollDirective.ctorParameters;\n/** @type {?} */\nInfiniteScrollDirective.propDecorators;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrolledUp;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollUpDistance;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollThrottle;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollDisabled;\n/** @type {?} */\nInfiniteScrollDirective.prototype.infiniteScrollContainer;\n/** @type {?} */\nInfiniteScrollDirective.prototype.scrollWindow;\n/** @type {?} */\nInfiniteScrollDirective.prototype.immediateCheck;\n/** @type {?} */\nInfiniteScrollDirective.prototype.horizontal;\n/** @type {?} */\nInfiniteScrollDirective.prototype.alwaysCallback;\n/** @type {?} */\nInfiniteScrollDirective.prototype.fromRoot;\n/** @type {?} */\nInfiniteScrollDirective.prototype.disposeScroller;\n/** @type {?} */\nInfiniteScrollDirective.prototype.element;\n/** @type {?} */\nInfiniteScrollDirective.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/mergeMap';\nimport'rxjs/add/operator/sampleTime';\n\nimport { ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ContainerRef, IPositionStats } from '../models';\nimport { AxisResolver } from './axis-resolver';\nimport { shouldTriggerEvents, triggerEvents } from './event-trigger';\nimport { resolveContainerElement } from './ngx-ins-utils';\nimport { calculatePoints, createResolver, isElementWindow } from './position-resolver';\nimport { getScrollStats, updateScrollPosition } from './scroll-resolver';\n\nexport interface IScrollRegisterConfig {\n  container: ContainerRef;\n  throttleDuration: number;\n  mergeMap: Function;\n  scrollHandler: (value: any) => void;\n}\n\nexport interface IScroller {\n  fromRoot: boolean;\n  horizontal: boolean;\n  disable: boolean;\n  throttle: number;\n  scrollWindow: boolean;\n  element: ElementRef;\n  scrollContainer: string | ElementRef;\n  alwaysCallback: boolean;\n  downDistance: number;\n  upDistance: number;\n  events?: {\n    down: (ev) => any;\n    up: (ev) => any;\n  };\n}\n/**\n * @param {?} options\n * @return {?}\n */\nexport function attachScrollEvent(\n  options: IScrollRegisterConfig\n): Subscription {\n  return Observable.fromEvent(options.container, 'scroll')\n    .sampleTime(options.throttleDuration)\n    .mergeMap((ev: any) => Observable.of(options.mergeMap(ev)))\n    .subscribe(options.scrollHandler);\n}\n/**\n * @param {?} config\n * @return {?}\n */\nexport function createScroller(config: IScroller): Subscription {\n  const /** @type {?} */ containerElement = resolveContainerElement(\n    config.scrollContainer,\n    config.scrollWindow,\n    config.element,\n    config.fromRoot\n  );\n  const /** @type {?} */ resolver = createResolver({\n    axis: new AxisResolver(!config.horizontal),\n    isWindow: isElementWindow(containerElement),\n    windowElement: containerElement\n  });\n  const /** @type {?} */ scrollPosition = {\n    last: 0\n  };\n  const /** @type {?} */ options: IScrollRegisterConfig = {\n    container: resolver.container,\n    mergeMap: () => calculatePoints(config.element, resolver),\n    scrollHandler: (positionStats: IPositionStats) =>\n      handleOnScroll(scrollPosition, positionStats, config),\n    throttleDuration: config.throttle\n  };\n  return attachScrollEvent(options);\n}\n/**\n * @param {?} scrollPosition\n * @param {?} positionStats\n * @param {?} config\n * @return {?}\n */\nexport function handleOnScroll(\n  scrollPosition,\n  positionStats: IPositionStats,\n  config: IScroller\n) {\n  const /** @type {?} */ distance = {\n    down: config.downDistance,\n    up: config.upDistance\n  };\n  const { isScrollingDown, shouldScroll } = getScrollStats(\n    scrollPosition.last,\n    positionStats,\n    {\n      distance\n    }\n  );\n  const /** @type {?} */ scrollConfig = {\n    alwaysCallback: config.alwaysCallback,\n    disable: config.disable,\n    shouldScroll\n  };\n  updateScrollPosition(positionStats.scrolledUntilNow, scrollPosition);\n  if (shouldTriggerEvents(scrollConfig)) {\n    triggerEvents(\n      config.events,\n      isScrollingDown,\n      positionStats.scrolledUntilNow\n    );\n  }\n}\n","import { IPositionStats, IScrollerConfig } from '../models';\n/**\n * @param {?} container\n * @param {?} config\n * @param {?} scrollingDown\n * @return {?}\n */\nexport function shouldScroll(\n  container: IPositionStats,\n  config: IScrollerConfig,\n  scrollingDown: boolean\n) {\n  const /** @type {?} */ distance = config.distance;\n  let /** @type {?} */ remaining: number;\n  let /** @type {?} */ containerBreakpoint: number;\n  if (scrollingDown) {\n    remaining = container.totalToScroll - container.scrolledUntilNow;\n    containerBreakpoint = container.height * distance.down + 1;\n  } else {\n    remaining = container.scrolledUntilNow;\n    containerBreakpoint = container.height * distance.up + 1;\n  }\n  const /** @type {?} */ shouldScroll: boolean = remaining <= containerBreakpoint;\n  return shouldScroll;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nexport function isScrollingDownwards(\n  lastScrollPosition: number,\n  container: IPositionStats\n) {\n  return lastScrollPosition < container.scrolledUntilNow;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} config\n * @return {?}\n */\nexport function getScrollStats(\n  lastScrollPosition: number,\n  container: IPositionStats,\n  config: IScrollerConfig\n) {\n  const /** @type {?} */ isScrollingDown = isScrollingDownwards(lastScrollPosition, container);\n  return {\n    shouldScroll: shouldScroll(container, config, isScrollingDown),\n    isScrollingDown\n  };\n}\n/**\n * @param {?} position\n * @param {?} lastPositionState\n * @return {?}\n */\nexport function updateScrollPosition(position: number, lastPositionState) {\n  return (lastPositionState.last = position);\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ContainerRef, IPositionElements, IPositionStats, IResolver } from '../models';\nimport { AxisResolver } from './axis-resolver';\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function createResolver({\n  isWindow,\n  windowElement,\n  axis\n}: IPositionElements): IResolver {\n  return createResolverWithContainer(\n    {\n      axis,\n      isWindow\n    },\n    windowElement\n  );\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nexport function createResolverWithContainer(\n  resolver,\n  windowElement: ContainerRef\n) {\n  const /** @type {?} */ container =\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\n      ? windowElement\n      : windowElement.nativeElement;\n  return { ...resolver, container };\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nexport function isElementWindow(windowElement: ContainerRef): boolean {\n  const /** @type {?} */ isWindow = ['Window', 'global'].some((obj: string) =>\n    Object.prototype.toString.call(windowElement).includes(obj)\n  );\n  return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nexport function getDocumentElement(isContainerWindow: boolean, windowElement) {\n  return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\n  const /** @type {?} */ height = extractHeightForElement(resolver);\n  return resolver.isWindow\n    ? calculatePointsForWindow(height, element, resolver)\n    : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nexport function calculatePointsForWindow(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container, isWindow } = resolver;\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  // scrolled until now / current y point\n  const /** @type {?} */ scrolledUntilNow =\n    height +\n    getElementPageYOffset(\n      getDocumentElement(isWindow, container),\n      axis,\n      isWindow\n    );\n  // total height / most bottom y point\n  const /** @type {?} */ nativeElementHeight = getElementHeight(\n    element.nativeElement,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n  const /** @type {?} */ totalToScroll =\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\n    nativeElementHeight;\n  return { height, scrolledUntilNow, totalToScroll };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nexport function calculatePointsForElement(\n  height: number,\n  element: ElementRef,\n  resolver: IResolver\n): IPositionStats {\n  const { axis, container } = resolver;\n  // perhaps use container.offsetTop instead of 'scrollTop'\n  const /** @type {?} */ scrolledUntilNow = container[axis.scrollTopKey()];\n  const /** @type {?} */ totalToScroll = container[axis.scrollHeightKey()];\n  return { height, scrolledUntilNow, totalToScroll };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nexport function extractHeightPropKeys(axis: AxisResolver) {\n  return {\n    offsetHeightKey: axis.offsetHeightKey(),\n    clientHeightKey: axis.clientHeightKey()\n  };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function extractHeightForElement({\n  container,\n  isWindow,\n  axis\n}: IResolver) {\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n  return getElementHeight(\n    container,\n    isWindow,\n    offsetHeightKey,\n    clientHeightKey\n  );\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nexport function getElementHeight(\n  elem: any,\n  isWindow: boolean,\n  offsetHeightKey: string,\n  clientHeightKey: string\n) {\n  if (isNaN(elem[offsetHeightKey])) {\n    return getDocumentElement(isWindow, elem)[clientHeightKey];\n  } else {\n    return elem[offsetHeightKey];\n  }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nexport function getElementOffsetTop(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const /** @type {?} */ topKey = axis.topKey();\n  // elem = elem.nativeElement;\n  if (!elem.getBoundingClientRect) {\n    // || elem.css('none')) {\n    return;\n  }\n  return (\n    elem.getBoundingClientRect()[topKey] +\n    getElementPageYOffset(elem, axis, isWindow)\n  );\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nexport function getElementPageYOffset(\n  elem: ContainerRef,\n  axis: AxisResolver,\n  isWindow: boolean\n) {\n  const /** @type {?} */ pageYOffset = axis.pageYOffsetKey();\n  const /** @type {?} */ scrollTop = axis.scrollTopKey();\n  const /** @type {?} */ offsetTop = axis.offsetTopKey();\n\n  if (isNaN(window[pageYOffset])) {\n    return getDocumentElement(isWindow, elem)[scrollTop];\n  } else if (elem.ownerDocument) {\n    return elem.ownerDocument.defaultView[pageYOffset];\n  } else {\n    return elem[offsetTop];\n  }\n}\n","import { InfiniteScrollEvent, IPositionStats } from '../models';\n\nexport interface IScrollerProps {\n  container: IPositionStats;\n  down: number;\n  up: number;\n  alwaysCallback: boolean;\n  disabled: boolean;\n}\n\nexport interface ITriggerEvents {\n  down: (event: any) => any;\n  up: (event: any) => any;\n}\n\nexport interface IDistanceRange {\n  down: number;\n  up: number;\n}\n\nexport interface IScrollConfig {\n  alwaysCallback: boolean;\n  disable: boolean;\n  shouldScroll: boolean;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nexport function shouldTriggerEvents({\n  alwaysCallback,\n  shouldScroll,\n  disable\n}: IScrollConfig) {\n  return (alwaysCallback || shouldScroll) && !disable;\n}\n/**\n * @param {?} callbacks\n * @param {?} isScrollingDown\n * @param {?} scrolledUntilNow\n * @return {?}\n */\nexport function triggerEvents(\n  callbacks: ITriggerEvents,\n  isScrollingDown: boolean,\n  scrolledUntilNow: number\n) {\n  const /** @type {?} */ eventData: InfiniteScrollEvent = {\n    currentScrollPosition: scrolledUntilNow\n  };\n  const /** @type {?} */ callback = isScrollingDown ? callbacks.down : callbacks.up;\n  callback(eventData);\n}\n","\nexport class AxisResolver {\n/**\n * @param {?=} vertical\n */\nconstructor(private vertical: boolean = true) {\n  }\n/**\n * @return {?}\n */\nclientHeightKey() { return this.vertical ? 'clientHeight' : 'clientWidth'; }\n/**\n * @return {?}\n */\noffsetHeightKey() { return this.vertical ? 'offsetHeight' : 'offsetWidth'; }\n/**\n * @return {?}\n */\nscrollHeightKey() { return this.vertical ? 'scrollHeight' : 'scrollWidth'; }\n/**\n * @return {?}\n */\npageYOffsetKey() { return this.vertical ? 'pageYOffset' : 'pageXOffset'; }\n/**\n * @return {?}\n */\noffsetTopKey() { return this.vertical ? 'offsetTop' : 'offsetLeft'; }\n/**\n * @return {?}\n */\nscrollTopKey() { return this.vertical ? 'scrollTop' : 'scrollLeft'; }\n/**\n * @return {?}\n */\ntopKey() { return this.vertical ? 'top' : 'left'; }\n}\n\nfunction AxisResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisResolver.prototype.vertical;\n}\n\n","import { ElementRef, SimpleChange } from '@angular/core';\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nexport function resolveContainerElement(\n  selector: string | any,\n  scrollWindow,\n  defaultElement,\n  fromRoot: boolean\n): any {\n  const /** @type {?} */ hasWindow = window && !!window.document;\n  const /** @type {?} */ containerIsString =\n    selector && hasWindow && typeof selector === 'string';\n  let /** @type {?} */ container = hasWindow && scrollWindow ? window : defaultElement;\n  if (containerIsString) {\n    container = containerIsString\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\n      : selector;\n  }\n  return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nexport function findElement(\n  selector: string | any,\n  customRoot: ElementRef | any,\n  fromRoot: boolean\n) {\n  const /** @type {?} */ rootEl = fromRoot ? window.document : customRoot;\n  return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nexport function inputPropChanged(prop: SimpleChange): boolean {\n  return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nexport function hasWindowDefined(): boolean {\n  return typeof window !== 'undefined';\n}\n"],"names":["shouldScroll"],"mappings":"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"}